[
    {
        "test_id": "test_run_1730201147",
        "example_id": "example_1",
        "model_name": "(LOCAL_TEST) Llama3.1 (8B) quantized 4bit",
        "system_prompt_version": {
            "version": "1.0",
            "prompt": "You are a helpful assistant. You are tasked with generating Domain Specific Language (DSL) code for a given input. Respond only with the DSL code.",
            "rationale": "Basic system prompt",
            "timestamp": "2024-10-10T10:00:00"
        },
        "input_text": "New product called meteorological using 4326 as srid.",
        "expected_dsl_output": "CREATE PRODUCT meteorological USING 4326;",
        "generated_dsl_output": "CREATE PRODUCT meteorological USING 4326;",
        "complexity_level": "simple",
        "parameters": {
            "seed": 7,
            "num_predict": -1,
            "num_ctx": 132000,
            "top_k": 41,
            "top_p": 0.9,
            "temperature": 0.0
        },
        "timestamp": "2024-10-29 12:25:47",
        "success": true,
        "bleu_score": 1.0
    },
    {
        "test_id": "test_run_1730201167",
        "example_id": 0,
        "model_name": "(LOCAL_TEST) Llama3.1 (8B) quantized 4bit",
        "system_prompt_version": {
            "version": "1.0",
            "prompt": "You are a helpful assistant. You are tasked with generating Domain Specific Language (DSL) code for a given input. Respond only with the DSL code.",
            "rationale": "Basic system prompt",
            "timestamp": "2024-10-10T10:00:00"
        },
        "input_text": "Create an application with sensors that have the following properties: maxDepth as Float, code as String, name as String, description as String, startTime as DateTime and endTime as DateTime. The sensors measure the following properties: temperature_its90 as Double with units '\u00baC' and icon 'thermometer-low', salinity as Double with units 'PSU', pressure as Double with units 'dbar' and icon 'speedometer', pH as Double with units 'ph' and icon 'ph', oxygen as double with units 'mg/l' and icon 'gas-cylinder', transmittance as Double with units 'm', irradiance as Double with units 'W/m2', density as Double with units 'kg/m3', and conductivity as Double with units 'S/m'. It will be necessary to aggregate by a spatial polygon dimension called estuary and a categorical dimension called depth. The categorical dimension estuary has the follwing properties: shortName as String, name as String and zone as String. The categorical dimension depth has the following ranges: surface from 0 to 3, 5m from 4.75 to 5.25, 10m from 9.75 to 10.25, 15m from 14.75 to 15.25, and 20m from 19.75 to 20.25. The data is retrieved every 300 seconds",
        "expected_dsl_output": "CREATE PRODUCT intecmar USING 4326; CREATE SPATIAL DIMENSION Estuary (geometry: Polygon) WITH PROPERTIES (shortName String DISPLAY_STRING,name String,zone String); CREATE CATEGORICAL DIMENSION Depth (field: depth); CREATE RANGE DepthRange (0 TO 3 AS 'surface', 4.75 TO 5.25 AS '5m', 9.75 TO 10.25 AS '10m', 14.75 TO 15.25 AS '15m', 19.75 TO 20.25 AS '20m'); CREATE SENSOR StationObservation (interval: 300, datasource: postgres, geometry: Point) WITH PROPERTIES (maxDepth Float, code String, name String,description String, startTime DateTime, endTime DateTime) WITH MEASUREMENT DATA (temperature_ITS90 Double UNITS '\u00baC' ICON 'thermometer-low', salinity Double UNITS 'PSU', pressure Double UNITS 'dbar' ICON 'speedometer', ph Double UNITS 'pH' ICON 'ph', oxygen Double UNITS 'mg/l' ICON 'gas-cylinder', transmittance Double UNITS 'm', irradiance Double UNITS 'W/m2', uv_flourescence Double UNITS 'mg/m3', density Double UNITS 'kg/m3', conductivity Double UNITS 'S/m') WITH SPATIAL GROUP Estuary (Estuary) WITH CATEGORICAL GROUP (Depth RANGE DepthRange) WITH BBOX ([42.7, -8.1], 9);",
        "generated_dsl_output": "CREATE APPLICATION Application WITH SENSORS (\n    StationObservation (\n        interval: 300,\n        datasource: elasticsearch,\n        geometry: Point\n    ) WITH PROPERTIES (\n        maxDepth Float,\n        code String,\n        name String,\n        description String,\n        startTime DateTime,\n        endTime DateTime\n    ) WITH MEASUREMENT DATA (\n        temperature_ITS90 Double UNITS \"\u00baC\" ICON \"thermometer-low\",\n        salinity Double UNITS \"PSU\",\n        pressure Double UNITS \"dbar\" ICON \"speedometer\",\n        ph Double UNITS \"ph\" ICON \"ph\",\n        oxygen Double UNITS \"mg/l\" ICON \"gas-cylinder\",\n        transmittance Double UNITS \"m\",\n        irradiance Double UNITS \"W/m2\",\n        density Double UNITS \"kg/m3\",\n        conductivity Double UNITS \"S/m\"\n    ) WITH SPATIAL DIMENSIONS Estuary (\n        geometry: Polygon\n    ) WITH CATEGORICAL DIMENSIONS Depth RANGE (\n        surface FROM 0 TO 3,\n        5m FROM 4.75 TO 5.25,\n        10m FROM 9.75 TO 10.25,\n        15m FROM 14.75 TO 15.25,\n        20m FROM 19.75 TO 20.25\n    )\n) WITH SPATIAL DIMENSION Estuary (\n    geometry: Polygon\n) WITH CATEGORICAL DIMENSIONS Depth RANGE (\n    surface FROM 0 TO 3,\n    5m FROM 4.75 TO 5.25,\n    10m FROM 9.75 TO 10.25,\n    15m FROM 14.75 TO 15.25,\n    20m FROM 19.75 TO 20.25\n) WITH PROPERTIES (\n    shortName String,\n    name String,\n    zone String\n);",
        "complexity_level": "complex",
        "parameters": {
            "seed": 7,
            "num_predict": -1,
            "num_ctx": 132000,
            "top_k": 41,
            "top_p": 0.9,
            "temperature": 0.0
        },
        "timestamp": "2024-10-29 12:26:07",
        "success": null,
        "bleu_score": 0.09987997387922486
    },
    {
        "test_id": "test_run_1730201309",
        "example_id": "example_1",
        "model_name": "(LOCAL_TEST) Llama3.1 (8B) quantized 4bit",
        "system_prompt_version": {
            "version": "1.0",
            "prompt": "You are a helpful assistant. You are tasked with generating Domain Specific Language (DSL) code for a given input. Respond only with the DSL code.",
            "rationale": "Basic system prompt",
            "timestamp": "2024-10-10T10:00:00"
        },
        "input_text": "New product called meteorological using 4326 as srid.",
        "expected_dsl_output": "CREATE PRODUCT meteorological USING 4326;",
        "generated_dsl_output": "CREATE PRODUCT meteorological USING 4326;",
        "complexity_level": "simple",
        "parameters": {
            "seed": 7,
            "num_predict": -1,
            "num_ctx": 132000,
            "top_k": 41,
            "top_p": 0.9,
            "temperature": 0.7
        },
        "timestamp": "2024-10-29 12:28:29",
        "success": true,
        "bleu_score": 1.0
    },
    {
        "test_id": "test_run_1730201324",
        "example_id": 0,
        "model_name": "(LOCAL_TEST) Llama3.1 (8B) quantized 4bit",
        "system_prompt_version": {
            "version": "1.0",
            "prompt": "You are a helpful assistant. You are tasked with generating Domain Specific Language (DSL) code for a given input. Respond only with the DSL code.",
            "rationale": "Basic system prompt",
            "timestamp": "2024-10-10T10:00:00"
        },
        "input_text": "Create an application with sensors that have the following properties: maxDepth as Float, code as String, name as String, description as String, startTime as DateTime and endTime as DateTime. The sensors measure the following properties: temperature_its90 as Double with units '\u00baC' and icon 'thermometer-low', salinity as Double with units 'PSU', pressure as Double with units 'dbar' and icon 'speedometer', pH as Double with units 'ph' and icon 'ph', oxygen as double with units 'mg/l' and icon 'gas-cylinder', transmittance as Double with units 'm', irradiance as Double with units 'W/m2', density as Double with units 'kg/m3', and conductivity as Double with units 'S/m'. It will be necessary to aggregate by a spatial polygon dimension called estuary and a categorical dimension called depth. The categorical dimension estuary has the follwing properties: shortName as String, name as String and zone as String. The categorical dimension depth has the following ranges: surface from 0 to 3, 5m from 4.75 to 5.25, 10m from 9.75 to 10.25, 15m from 14.75 to 15.25, and 20m from 19.75 to 20.25. The data is retrieved every 300 seconds",
        "expected_dsl_output": "CREATE PRODUCT intecmar USING 4326; CREATE SPATIAL DIMENSION Estuary (geometry: Polygon) WITH PROPERTIES (shortName String DISPLAY_STRING,name String,zone String); CREATE CATEGORICAL DIMENSION Depth (field: depth); CREATE RANGE DepthRange (0 TO 3 AS 'surface', 4.75 TO 5.25 AS '5m', 9.75 TO 10.25 AS '10m', 14.75 TO 15.25 AS '15m', 19.75 TO 20.25 AS '20m'); CREATE SENSOR StationObservation (interval: 300, datasource: postgres, geometry: Point) WITH PROPERTIES (maxDepth Float, code String, name String,description String, startTime DateTime, endTime DateTime) WITH MEASUREMENT DATA (temperature_ITS90 Double UNITS '\u00baC' ICON 'thermometer-low', salinity Double UNITS 'PSU', pressure Double UNITS 'dbar' ICON 'speedometer', ph Double UNITS 'pH' ICON 'ph', oxygen Double UNITS 'mg/l' ICON 'gas-cylinder', transmittance Double UNITS 'm', irradiance Double UNITS 'W/m2', uv_flourescence Double UNITS 'mg/m3', density Double UNITS 'kg/m3', conductivity Double UNITS 'S/m') WITH SPATIAL GROUP Estuary (Estuary) WITH CATEGORICAL GROUP (Depth RANGE DepthRange) WITH BBOX ([42.7, -8.1], 9);",
        "generated_dsl_output": "CREATE APPLICATION {\n    SENSORS (\n        StationObservation\n        WITH PROPERTIES (\n            maxDepth Float,\n            code String,\n            name String,\n            descripcion String,\n            startTime DateTime,\n            endTime DateTime\n        )\n        WITH MEASUREMENT DATA (\n            temperature_ITS90 Double UNITS \"\u00baC\" ICON \"thermometer-low\",\n            salinity Double,\n            pressure Double UNITS \"dbar\" ICON \"speedometer\",\n            ph Double UNITS \"ph\" ICON \"ph\",\n            oxygen Double UNITS \"mg/l\" ICON \"gas-cylinder\",\n            transmittance Double UNITS \"m\",\n            irradiance Double UNITS \"W/m2\",\n            density Double UNITS \"kg/m3\",\n            conductivity Double UNITS \"S/m\"\n        )\n    )\n    WITH SPATIAL DIMENSION Estuary (\n        WITH PROPERTIES (\n            shortName String,\n            name String,\n            zone String\n        )\n    )\n    WITH CATEGORICAL DIMENSION Depth (\n        WITH RANGE surface 0 TO 3,\n        WITH RANGE \"5m\" 4.75 TO 5.25,\n        WITH RANGE \"10m\" 9.75 TO 10.25,\n        WITH RANGE \"15m\" 14.75 TO 15.25,\n        WITH RANGE \"20m\" 19.75 TO 20.25\n    )\n} \nWITH SCHEDULE (\n    interval 300\n);",
        "complexity_level": "complex",
        "parameters": {
            "seed": 7,
            "num_predict": -1,
            "num_ctx": 132000,
            "top_k": 41,
            "top_p": 0.9,
            "temperature": 0.7
        },
        "timestamp": "2024-10-29 12:28:44",
        "success": null,
        "bleu_score": 0.11721458826207415
    },
    {
        "test_id": "test_run_1730201351",
        "example_id": "example_1",
        "model_name": "(LOCAL_TEST) Llama3.1 (8B) quantized 4bit",
        "system_prompt_version": {
            "version": "1.0",
            "prompt": "You are a helpful assistant. You are tasked with generating Domain Specific Language (DSL) code for a given input. Respond only with the DSL code.",
            "rationale": "Basic system prompt",
            "timestamp": "2024-10-10T10:00:00"
        },
        "input_text": "New product called meteorological using 4326 as srid.",
        "expected_dsl_output": "CREATE PRODUCT meteorological USING 4326;",
        "generated_dsl_output": "CREATE PRODUCT meteorological USING 4326;",
        "complexity_level": "simple",
        "parameters": {
            "seed": 7,
            "num_predict": -1,
            "num_ctx": 132000,
            "top_k": 41,
            "top_p": 0.9,
            "temperature": 0.9
        },
        "timestamp": "2024-10-29 12:29:11",
        "success": true,
        "bleu_score": 1.0
    },
    {
        "test_id": "test_run_1730201367",
        "example_id": 0,
        "model_name": "(LOCAL_TEST) Llama3.1 (8B) quantized 4bit",
        "system_prompt_version": {
            "version": "1.0",
            "prompt": "You are a helpful assistant. You are tasked with generating Domain Specific Language (DSL) code for a given input. Respond only with the DSL code.",
            "rationale": "Basic system prompt",
            "timestamp": "2024-10-10T10:00:00"
        },
        "input_text": "Create an application with sensors that have the following properties: maxDepth as Float, code as String, name as String, description as String, startTime as DateTime and endTime as DateTime. The sensors measure the following properties: temperature_its90 as Double with units '\u00baC' and icon 'thermometer-low', salinity as Double with units 'PSU', pressure as Double with units 'dbar' and icon 'speedometer', pH as Double with units 'ph' and icon 'ph', oxygen as double with units 'mg/l' and icon 'gas-cylinder', transmittance as Double with units 'm', irradiance as Double with units 'W/m2', density as Double with units 'kg/m3', and conductivity as Double with units 'S/m'. It will be necessary to aggregate by a spatial polygon dimension called estuary and a categorical dimension called depth. The categorical dimension estuary has the follwing properties: shortName as String, name as String and zone as String. The categorical dimension depth has the following ranges: surface from 0 to 3, 5m from 4.75 to 5.25, 10m from 9.75 to 10.25, 15m from 14.75 to 15.25, and 20m from 19.75 to 20.25. The data is retrieved every 300 seconds",
        "expected_dsl_output": "CREATE PRODUCT intecmar USING 4326; CREATE SPATIAL DIMENSION Estuary (geometry: Polygon) WITH PROPERTIES (shortName String DISPLAY_STRING,name String,zone String); CREATE CATEGORICAL DIMENSION Depth (field: depth); CREATE RANGE DepthRange (0 TO 3 AS 'surface', 4.75 TO 5.25 AS '5m', 9.75 TO 10.25 AS '10m', 14.75 TO 15.25 AS '15m', 19.75 TO 20.25 AS '20m'); CREATE SENSOR StationObservation (interval: 300, datasource: postgres, geometry: Point) WITH PROPERTIES (maxDepth Float, code String, name String,description String, startTime DateTime, endTime DateTime) WITH MEASUREMENT DATA (temperature_ITS90 Double UNITS '\u00baC' ICON 'thermometer-low', salinity Double UNITS 'PSU', pressure Double UNITS 'dbar' ICON 'speedometer', ph Double UNITS 'pH' ICON 'ph', oxygen Double UNITS 'mg/l' ICON 'gas-cylinder', transmittance Double UNITS 'm', irradiance Double UNITS 'W/m2', uv_flourescence Double UNITS 'mg/m3', density Double UNITS 'kg/m3', conductivity Double UNITS 'S/m') WITH SPATIAL GROUP Estuary (Estuary) WITH CATEGORICAL GROUP (Depth RANGE DepthRange) WITH BBOX ([42.7, -8.1], 9);",
        "generated_dsl_output": "CREATE APPLICATION StationObservation WITH SENSORS (\n    StationObservation (\n        interval: 300,\n        datasource: elasticsearch,\n        geometry: Point\n    ) WITH PROPERTIES (\n        maxDepth Float,\n        code String,\n        name String,\n        description String,\n        startTime DateTime,\n        endTime DateTime\n    ) WITH MEASUREMENT DATA (\n        temperature_its90 Double UNITS \"\u00baC\" ICON \"thermometer-low\",\n        salinity Double UNITS \"PSU\",\n        pressure Double UNITS \"dbar\" ICON \"speedometer\",\n        ph Double UNITS \"ph\" ICON \"ph\",\n        oxygen Double UNITS \"mg/l\" ICON \"gas-cylinder\",\n        transmittance Double UNITS \"m\",\n        irradiance Double UNITS \"W/m2\",\n        density Double UNITS \"kg/m3\",\n        conductivity Double UNITS \"S/m\"\n    ) WITH SPATIAL DIMENSIONS Estuary (\n        geometry Polygon\n    ) WITH CATEGORICAL DIMENSIONS Depth RANGE (\n        surface FROM 0 TO 3,\n        5m FROM 4.75 TO 5.25,\n        10m FROM 9.75 TO 10.25,\n        15m FROM 14.75 TO 15.25,\n        20m FROM 19.75 TO 20.25\n    ) WITH CATEGORICAL DIMENSIONS Estuary (\n        shortName String,\n        name String,\n        zone String\n    )\n) AGGREGATE BY SpatialPolygonEstuary(Estuary), Depth(DepthRange);",
        "complexity_level": "complex",
        "parameters": {
            "seed": 7,
            "num_predict": -1,
            "num_ctx": 132000,
            "top_k": 41,
            "top_p": 0.9,
            "temperature": 0.9
        },
        "timestamp": "2024-10-29 12:29:27",
        "success": null,
        "bleu_score": 0.11516727887959323
    }
]